<Spring MVC - Mybatis 적용하여 만들기>

1. Spring Legacy project 파일을 만든다.
2. Maven update project >> 업데이트 해준다.
3. Project폴더 > 우클릭 > properties > project paset > java 1.5version => 1.8로 수정
4. pom.xml 버전수정 및 디펜던시 추가하기
	1) 수정
	- Generric 1.8
	- Spring 4.3.6
	2) 추가
	- oracle 레포지토리	: JDBC를 다운받기 위한 경로 설정
	- Spring-fileupload : 파일 업로드를 위한 maven_jar 파일 다운
	- commons-io
	- mybatis
	- mybatis-spring
	- 오라클 JDBC 드라이버
	- spring-jdbc
	- commons-dbcp
5. web.xml
	- boardWriteForm 과 같은 이름으로 주소를 찾을 경우, url-pattern 수정없이 그대로 사용
	- boardWriteForm.do	[*.do]와 같은 형태로 쓸 경우, url-pattern 을 *.do 와 같이 수정
	
6. Sql _ Database 작업 : 항상 작업은 DB에서 출발한다.
	- 사용될 sql폴더 및 파일 작성 : 한번에 보기 쉽게
		- 만들어진 것 : webapp/sql/ [ board.sql & member.sql ]
		
7. sql 기준으로 DTO 파일 만들기
	- 프로젝트 파일 > java resources > src/main/java/package/classsName.java
	- 변수 및 getter/setter 작업
	
	Class File
	- member.bean/MemberDTO.java
	- board.bean/BoardDTO.java

8. JSP 메인화면 만들기
	- index.jsp

	- loginForm.jsp
	- form action="login" 이름 형태로 설정
	
9. Controller 작업하기
	- web.xml에 dispatcherServlet이 등록되어 있으므로, servlet파일을 따로 만들 필요는 없다.
	- web.xml에 정의된 urlPatter에 맞게 작업
	- mvc-config에서 Resolver 수정 혹은 삭제 
		=> 기존것으로 작업할 경우, WEB-INF/view/EXAM.jsp 로 이동하게 됨.
		
	1) mvc-config.xml 에서 ViewResolver 작업 
		prefix : " / "
		suffix : " .jsp "

	
	
-------------------------------
* 작업순서
mybatis : slq 문 정리
dao : db 처리
jsp 파일에서 java, html 분리
	- > java :controller
	- > html : jsp
service 처리

	

	
	
	
	


