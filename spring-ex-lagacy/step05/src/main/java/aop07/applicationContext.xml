<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- advice : 횡단(공통)관심사항 -->
	<bean id="loggingAdvice" class="aop07.LoggingAdvice" />
	<bean id="messageBean" class="aop07.MessageBeanImpl" 
		p:name="Spring" />
		
	<aop:config>
		<!-- 횡단(공통)관심사항이 설정된 advice를 등록한다. -->
		<aop:aspect id="logAspect" ref="loggingAdvice">
			<!-- 동작 시킬 함수를 등록한다. -->
			<aop:pointcut id="logPointCut" expression="execution(* sayHello*())"/>
			<!-- around는 메소드의 호출자체를 가로채
				비즈니스 메소드 실행 전후에 처리할 로직을 삽입 -->
			<aop:around method="logAround" pointcut-ref="logPointCut"/>
						
												 <!-- 핵심관심사항 : after, before를 한꺼번에 처리할 수 있다. -->
			
		</aop:aspect>
	</aop:config>

</beans>
